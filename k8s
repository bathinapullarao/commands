Ref: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/
kubectl run hello-node --image=hello-node:v1 --port=8080
kubectl describe pod
kubectl delete pod hello-node
## Test to ensure the version you installed is up-to-date:
kubectl version --client
kubectl version
## By default, kubectl configuration is located at ~/.kube/config.Check that kubectl is properly configured by getting the cluster state:
kubectl cluster-info
kubectl get all          <--shows all the componets inside cluster
kubectl get nodes
kubectl get pod
kubectl get service
kubectl create -h        <---help on creaing
kubectl create deployment nginx-deploy --image=nginx
kubectl get deployment
kubectl expose deployment/my-nginx
kubectl get pod          <--pod will be ready after deploymnet
 kubectl get pods -l app=nginx
kubectl get replicaset   <--manages the replicas of a pod
kubectl get rs           <--manages the replicas of a pod
kubectl edit deployment nginx-deploy  <--you may edit version .. etc
kubectl get pod 
kubectl get replicaset
kubectl logs podname                   <--get logs
kubectl create deployment mongo-deploy --image=mongo
kubectl get pod
kubectl describe pod podname            <--get aditional information
kubectl exec -it podname -- /bin/bash   <--enter in to terminal for debugging
exit                                    <--to exit from container
kubectl get deployment                  <--check the name of deploymnet
kubectl delete deployment nameofdeploymnet
kubectl delete -f deployment.yml
kubectl delete -f service.yml
kubectl create deployment name image option1 option2 
kubectl apply -f config-file.yml        <--apply the configuration
kubectl describe service sevicename     <-- can see all service details like example port forwording..etc
kubectl get svc my-nginx
kubectl describe deployments
kubectl get pod -o wide                 <--get internal ip details of container
kubectl get deployment deploymnetname -o yaml > result.yml   <--can see etcd in yaml format
echo -n 'username' | base64             <-- to encript username or password to keep in secret
kubectl apply -f secret.yml
kubectl get secret
//kubectl delete deployments,svc my-nginx; kubectl create -f ./nginx-secure-app.yam
-------------------------
kubeadm version
kubeadm upgrade plan
kubeadm upgrade apply v1.20.x
kubeadm upgrade node
kubeadm upgrade apply
kubeadm certs check-expiration
kubeadm certs renew apiserver --use-api &
kubectl certificate approve kubeadm-cert-kube-apiserver-ld526
systemctl daemon-reload
systemctl restart kubelet

---------------------------
minikube start
minikube status
--------------------------
kind: Service
kind: Endpoints

