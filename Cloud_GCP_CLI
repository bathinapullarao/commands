Ref:  https://gist.github.com/pydevops/cffbd3c694d599c6ca18342d3625af97
Ref:  https://pnatraj.medium.com/how-to-run-gcloud-command-line-using-a-service-account-f39043d515b9
gcloud services disable file.googleapis.com    //To disable service form cli
gcloud services enable file.googleapis.com
* docker-credential-gcloud list
## gcloud commands
* gcloud auth activate-service-account --key-file credentials.json
* DISPLAY=":0" gcloud auth login    <-- from wsl
* gcloud auth application-default login
**  gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia.gcr.io   <--create key in ~/.docker/config.json before executing delete that json file
* gcloud beta compute ssl-certificates list
* gcloud beta compute target-https-proxies list
* gcloud beta billing accounts list
* gcloud beta services vpc-peerings update --service=servicenetworking.googleapis.com --ranges=qa01db --network=qa01-gcp-vpc --project=PROJECTID --force
Restricting the use of images   <--https://cloud.google.com/compute/docs/images/restricting-image-access
* gcloud beta resource-manager org-policies describe compute.trustedImageProjects --effective --project projectid
** gcloud config set container/cluster gkeclustername     <-- to set default cluster
** gcloud config set project projectid
** gcloud config set custom_ca_certs_file ~/combined_certs.pem
* gcloud container clusters describe dev99-gke-gcp-cluster --region=asia-northeast1-a | grep maxNodeCount
* gcloud container clusters get-credentials clustername --zone asia-south1-c --project projectid     <--Configuring cluster access for Kubectl
* gcloud container clusters upgrade clustername --master                                  <-- upgrade the version of GKE cluster
* gcloud container clusters resize gkeclustername --node-pool default-pool --num-nodes 4  <--Resizing a Cluster
* gcloud container clusters update clustername --enable-autoscaling -min-nodes 1 -max-nodes 10 --node-pool default-pool   <--Auto-scaling a Cluster
  kubectl config view                                                  <-- to check the cluster complete details of gke
* gcloud container clusters list
* gcloud container clusters delete clustername                         <--Deleting a Cluster
* gcloud container images list
* gcloud container get-server-config                                   <--to get all gke versions
* gcloud container images list-tags gcr.io/projectid
** gcloud container images list --repository=asia.gcr.io/projectid     <--listing the images
* gcloud components list
* gcloud components install kubectl
* gcloud compute instances list
* gcloud compute forwarding-rules list
* gcloud compute routes list
* gcloud compute operations list
* gcloud compute firewall-rules list
* gcloud compute firewall-rules update allow-from-pullarao --source-ranges=223.238.28.78
* gcloud compute instances move <instance_wanna_move> --destination-zone=us-central1-a --zone=us-central1-c
* gcloud compute interconnects locations list   <--list Google Compute Engine interconnect locations
* gcloud compute instances list --project gcm-devqa-pr-12345 --format="table(gcm-devqa-pr-12345,id,name,status,EXTERNAL_IP)"
* gcloud compute instances list --filter="metadata.list(show="key"):serial-port-enable AND metadata.list(show="value"):True"
* gcloud compute instances list --format="json"  > a.txt
* gcloud compute instances list --format=yaml
* gcloud compute instances add-metadata INSTANCE --metadata serial-port-enable=1
* gcloud compute connect-to-serial-port [INSTANCE_NAME]  <--Login from serial console
* gcloud filestore instances list
* gcloud deployment-manager deployments delete quickstart-deployment
* gcloud iam service-accounts list
* PROJECT=$(gcloud info --format='value(config.project)')
* gsutil mb -p PROJECT_name -l REGION -c STANDERD -b on gs://GCS_BUCKET_NAME   <--mb stands for makebucket
* gcloud projects get-iam-policy Project-ID
* gcloud projects get-iam-policy $PROJECTID --flatten="bindings[].members" --format='table(bindings.role)' \
   --filter="bindings.members:$ServiceaccountMAILID
* gcloud organizations list
* gcloud services list
* gcloud services enable monitoring
* gcloud sql instances list
gcloud services enable cloudapis.googleapis.com && \
cloudresourcemanager.googleapis.com && \
compute.googleapis.com && \
containerregistry.googleapis.com
* gsutil cp -p gs://sql/s.sql gs://dev-uploads/s.sql
  gsutil rm -r gs://sql/s.sql
* gsutil ls
* gsutil ls gs://bucketname
showmount -e filesoreip                                                    //To check mountname 
mount Filestoreipaddress:/givenmountname /path/ofdirin/computeengine       //To mount filestore
mount -t gcsfuse -o implicit_dirs,uid=48,gid=48,allow_other qa01-mcm-uploads /var/www/html/upload  //mount gcs bucket
sudo fusermount -u /var/www/html/upload                                     //umount gcs bucket

gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia.gcr.io
cat ~/.docker/config.json
DOCKER_BUILDKIT=1 docker build --secret id=ssh,src=~/.ssh/id_rsa   --build-arg GIT_BRANCH=bug/Sprintnum   -f Dockerfile   -t php-apache:1.0 .
DOCKER_BUILDKIT=1 docker build --secret id=ssh,src=~/.ssh/id_rsa   -f Dockerfile   -t elasticsearch-oss:6.8.13 .
sudo docker tag php-apache:$TAG asia.gcr.io/ProjectID/${LOCAL_IMAGE}:$TAG
docker push asia.gcr.io/ProjectID/${LOCAL_IMAGE}:$TAG








gcloud info --format='value(config.project)'      <-- To get project ID
##shell
for project in $(gcloud projects list --format="value(project_id)")
do
# List the instances which has serial port access enabled
  gcloud compute instances list --project $project --filter="metadata.list(show="key"):serial-port-enable AND metadata.list(show="value"):True" >> report_serial_po_enabled_vm.csv
done
##To check logging in GCP
resource.type="cloudsql_database"  textPayload:("LOCK" OR "error" OR "deadlock")
